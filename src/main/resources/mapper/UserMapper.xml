<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.hackathon.root.repository.UserMapper">
      <sql id="UserColumns">
          user.id
        , user.email
        ,	user.status
        ,	user.created_time
        ,	user.updated_time
        ,	user.deleted_time
      </sql>

  <select id="selectUserById" parameterType="map" resultType="User">
    SELECT
    /* user.selectUserById */
       <include refid="UserColumns" />
    FROM
        user
    WHERE
        id = #{id}
  </select>

  <select id="selectUserByEmail" parameterType="map" resultType="int">
    SELECT
    /* user.selectUserByEmail */
      count(*)
    FROM
      user
    WHERE
      email = #{email}
  </select>

  <select id="login" resultType="User" parameterType="map">
    SELECT
    /* user.login */
      <include refid="UserColumns" />
    FROM
      user
    WHERE
      email = #{email}
      AND password = #{password}
  </select>

  <insert id="insertUser" parameterType="map">
       INSERT INTO /* user.insertUser */
        user(id, email, password, status, created_time, updated_time)
        value(#{id}, #{email}, #{password}, #{status}, NOW(), NOW())
  </insert>

  <update id="updateUserById" parameterType="map">
      UPDATE /* user.updateUserById */
        user
      SET
        , status = #{status}
        , updated_time = NOW()
      WHERE
        id = #{id}
    </update>

  <update id="deleteUserById" parameterType="map">
      UPDATE /* user.deleteUserById */
        user
      SET
        status = 1
        , updated_time = NOW()
        , deleted_time = NOW()
      WHERE
        id = #{id}
    </update>


</mapper>
